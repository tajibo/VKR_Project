# bot/handlers/feedback.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, CallbackQueryHandler
from db.database import SessionLocal
from db.models import User, UserFeedback, ErrorLog
from bot.handlers.utils import log_activity

@log_activity("request_feedback")
async def request_feedback(update: Update, context: CallbackContext) -> None:
    """
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –±–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ ¬´üëç –ü–æ–ª–µ–∑–Ω–æ¬ª –∏ ¬´üëé –ù–µ –ø–æ–º–æ–≥–ª–æ¬ª.
    """
    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ update.message —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞,
    # –∏ –º—ã –≤—ã–∑—ã–≤–∞–µ–º —ç—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä —á–µ—Ä–µ–∑ context.bot.send_message(..., reply_markup=markup)
    keyboard = [
        [
            InlineKeyboardButton("üëç –ü–æ–ª–µ–∑–Ω–æ", callback_data="like"),
            InlineKeyboardButton("üëé –ù–µ –ø–æ–º–æ–≥–ª–æ", callback_data="dislike"),
        ]
    ]
    markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–û—Ü–µ–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞:", reply_markup=markup)


@log_activity("process_feedback")
async def process_feedback(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ Inline-–∫–Ω–æ–ø–∫—É ¬´üëç¬ª –∏–ª–∏ ¬´üëé¬ª. 
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
    """
    query = update.callback_query
    user_id_telegram = query.from_user.id
    rating = 1 if query.data == "like" else 0

    # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –∏—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ reply_to_message:
    original_query_text = ""
    if query.message and query.message.reply_to_message:
        original_query_text = query.message.reply_to_message.text

    db = SessionLocal()
    try:
        db_user = db.query(User).filter(User.telegram_id == user_id_telegram).first()
        if not db_user:
            await query.answer("–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ /start.", show_alert=True)
            return

        fb = UserFeedback(
            user_id=db_user.id,
            query_text=original_query_text,
            rating=rating,
            comment=None
        )
        db.add(fb)
        db.commit()

        await query.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!", show_alert=False)
    except Exception as e:
        err_db = SessionLocal()
        err_db.add(ErrorLog(
            user_id=db_user.id if db_user else None,
            handler_name="process_feedback",
            error_text=str(e)
        ))
        err_db.commit()
        err_db.close()
        await query.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)
    finally:
        db.close()
