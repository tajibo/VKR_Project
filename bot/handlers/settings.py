# bot/handlers/settings.py

from telegram import Update
from telegram.ext import ConversationHandler, CommandHandler, MessageHandler, filters, ContextTypes
from db.database import SessionLocal
from db.models import User, UserSetting

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
(
    POMODORO_DURATION,  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ–≥–¥–∞ –±–æ—Ç –∂–¥—ë—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ –¥–ª—è Pomodoro
    BREAK_DURATION      # —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ–≥–¥–∞ –±–æ—Ç –∂–¥—ë—Ç —á–∏—Å–ª–æ –¥–ª—è Break
) = range(2)


# --- 1) –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è ¬´—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π¬ª –∫–æ–º–∞–Ω–¥—ã /set_pomodoro_duration ---

# –®–∞–≥ 1: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª /set_pomodoro_duration ‚Üí –±–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç
async def set_pomodoro_duration_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.effective_user.id
    db = SessionLocal()
    try:
        db_user = db.query(User).filter(User.telegram_id == user_id).first()
        if not db_user:
            await update.message.reply_text(
                "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
            )
            return ConversationHandler.END

        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∏—Å–ª–æ –¥–ª—è Pomodoro
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é Pomodoro-–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–≤ –º–∏–Ω—É—Ç–∞—Ö):")
        return POMODORO_DURATION

    except Exception:
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return ConversationHandler.END

    finally:
        db.close()


# –®–∞–≥ 2: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–∏—Å–ª–æ–º ‚Üí —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
async def set_pomodoro_duration_receive(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    text = update.message.text.strip()

    if not text.isdigit():
        await update.message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 25).")
        return POMODORO_DURATION

    minutes = int(text)
    if minutes <= 0:
        await update.message.reply_text("–ú–∏–Ω—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return POMODORO_DURATION

    user_id = update.effective_user.id
    db = SessionLocal()
    try:
        db_user = db.query(User).filter(User.telegram_id == user_id).first()
        if not db_user:
            await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return ConversationHandler.END

        db_settings = db.query(UserSetting).filter(UserSetting.user_id == db_user.id).first()
        if not db_settings:
            # –ï—Å–ª–∏ –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º
            db_settings = UserSetting(
                user_id=db_user.id,
                pomodoro_duration=minutes,
                break_duration=5,
                notifications_enabled=True
            )
            db.add(db_settings)
        else:
            db_settings.pomodoro_duration = minutes

        db.commit()
        await update.message.reply_text(f"‚úÖ Pomodoro-–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {minutes} –º–∏–Ω—É—Ç.")
    except Exception:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        db.close()

    return ConversationHandler.END


# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥
async def cancel_pomodoro_duration(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END


# --- 2) –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è ¬´—Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π¬ª –∫–æ–º–∞–Ω–¥—ã /set_break_duration ---

# –®–∞–≥ 1: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª /set_break_duration ‚Üí –±–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–∏—Å–ª–æ
async def set_break_duration_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.effective_user.id
    db = SessionLocal()
    try:
        db_user = db.query(User).filter(User.telegram_id == user_id).first()
        if not db_user:
            await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return ConversationHandler.END

        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ä—ã–≤–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö):")
        return BREAK_DURATION

    except Exception:
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return ConversationHandler.END

    finally:
        db.close()


# –®–∞–≥ 2: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —á–∏—Å–ª–æ ‚Üí —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
async def set_break_duration_receive(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    text = update.message.text.strip()

    if not text.isdigit():
        await update.message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5).")
        return BREAK_DURATION

    minutes = int(text)
    if minutes <= 0:
        await update.message.reply_text("–ú–∏–Ω—É—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return BREAK_DURATION

    user_id = update.effective_user.id
    db = SessionLocal()
    try:
        db_user = db.query(User).filter(User.telegram_id == user_id).first()
        if not db_user:
            await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return ConversationHandler.END

        db_settings = db.query(UserSetting).filter(UserSetting.user_id == db_user.id).first()
        if not db_settings:
            db_settings = UserSetting(
                user_id=db_user.id,
                pomodoro_duration=25,
                break_duration=minutes,
                notifications_enabled=True
            )
            db.add(db_settings)
        else:
            db_settings.break_duration = minutes

        db.commit()
        await update.message.reply_text(f"‚úÖ Break-–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {minutes} –º–∏–Ω—É—Ç.")
    except Exception:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        db.close()

    return ConversationHandler.END


async def cancel_break_duration(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END


# --- 3) –û–±—ã—á–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä /settings –∏ /toggle_notifications (–±–µ–∑ –¥–∏–∞–ª–æ–≥–∞) ---

# /settings ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
async def settings_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    db = SessionLocal()
    try:
        db_user = db.query(User).filter(User.telegram_id == user_id).first()
        if not db_user:
            await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return

        db_settings = db.query(UserSetting).filter(UserSetting.user_id == db_user.id).first()
        if not db_settings:
            db_settings = UserSetting(
                user_id=db_user.id,
                pomodoro_duration=25,
                break_duration=5,
                notifications_enabled=True
            )
            db.add(db_settings)
            db.commit()

        state = "–≤–∫–ª—é—á–µ–Ω—ã" if db_settings.notifications_enabled else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
        text = (
            f"–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
            f"‚Ä¢ Pomodoro-–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {db_settings.pomodoro_duration} –º–∏–Ω.\n"
            f"‚Ä¢ Break-–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {db_settings.break_duration} –º–∏–Ω.\n"
            f"‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {state}\n\n"
            "–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/set_pomodoro_duration (—á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å Pomodoro-–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)\n"
            "/set_break_duration (—á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ä—ã–≤–∞)\n"
            "/toggle_notifications (—á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)"
        )
        await update.message.reply_text(text)
    except Exception:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ üõë")
    finally:
        db.close()


# /toggle_notifications ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
async def toggle_notifications(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    db = SessionLocal()
    try:
        db_user = db.query(User).filter(User.telegram_id == user_id).first()
        if not db_user:
            await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return

        db_settings = db.query(UserSetting).filter(UserSetting.user_id == db_user.id).first()
        if not db_settings:
            db_settings = UserSetting(
                user_id=db_user.id,
                pomodoro_duration=25,
                break_duration=5,
                notifications_enabled=False
            )
            db.add(db_settings)
        else:
            db_settings.notifications_enabled = not db_settings.notifications_enabled

        db.commit()
        state = "–≤–∫–ª—é—á–µ–Ω—ã" if db_settings.notifications_enabled else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
        await update.message.reply_text(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è {state}.")
    except Exception:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üõë")
    finally:
        db.close()
