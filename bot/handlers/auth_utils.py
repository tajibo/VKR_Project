# bot/handlers/auth_utils.py
from functools import wraps
from telegram import Update
from telegram.ext import ContextTypes

def requires_role(allowed_roles: list[str]):
    def decorator(handler):
        @wraps(handler)
        async def wrapper(update: Update, context: ContextTypes.DEFAULT_TYPE, *args, **kwargs):
            if not context.user_data.get("is_authenticated"):
                await update.message.reply_text(
                    "üö´ –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /login."
                )
                return
            user_role = context.user_data.get("role")
            if user_role not in allowed_roles:
                await update.message.reply_text("üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                return
            return await handler(update, context, *args, **kwargs)
        return wrapper
    return decorator
